{"version":3,"sources":["images/logo.png","components/Header.js","components/Footer.js","components/CharacterItem.js","components/CharacterList.js","components/CharacterDetail.js","components/FilterByName.js","components/FilterBySpecies.js","components/Reset.js","components/Filters.js","services/DataApi.js","services/local-storage.js","components/App.js","index.js"],"names":["Header","className","src","logo","alt","title","Footer","CharacterItem","props","to","characterData","id","photo","name","species","CharacterList","html","data","map","index","CharacterDetail","console","log","undefined","selectedCharacter","origin","status","episodes","FilterByName","type","placeholder","value","searchName","onChange","ev","handleChangeFilter","target","FilterBySpecies","searchSpecies","Reset","onClick","handleReset","Filters","onSubmit","preventDefaul","getDataFromApi","fetch","then","response","json","results","character","image","episode","objectToExport","get","key","defaultValue","localStorageData","localStorage","getItem","JSON","parse","set","stringify","setItem","remove","removeItem","clear","App","useState","ls","setData","setSearchName","setSearchSpecies","useEffect","DataApi","initialData","routeData","useRouteMatch","characterId","params","find","parseInt","filteredData","filter","toLocaleLowerCase","includes","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76957310.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import logo from '../images/logo.png';\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"logo\" src={logo} alt=\"Logo\" title=\"Logo\" />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","const Footer = () => {\r\n  return <footer className=\"footer\">Developed by Patricia Martínez</footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst CharacterItem = (props) => {\r\n  return (\r\n    <Link className=\"card__link\" to={`./character/${props.characterData.id}`}>\r\n      <img\r\n        className=\"card__img\"\r\n        src={props.characterData.photo}\r\n        alt={`Foto de ${props.characterData.name}`}\r\n        title={`Foto de ${props.characterData.name}`}\r\n      />\r\n      <h4 className=\"card__title\">{props.characterData.name}</h4>\r\n      <p className=\"card__description\">{props.characterData.species}</p>\r\n    </Link>\r\n  );\r\n};\r\nexport default CharacterItem;\r\n","import CharacterItem from './CharacterItem';\r\n\r\nconst CharacterList = (props) => {\r\n  //console.log('CharacterList', props);\r\n\r\n  const html = props.data.map((characterData, index) => (\r\n    <li key={index} className=\"card__item\">\r\n      <CharacterItem characterData={characterData} />\r\n    </li>\r\n  ));\r\n\r\n  return <ul className=\"card__list\">{html}</ul>;\r\n};\r\nexport default CharacterList;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst CharacterDetail = (props) => {\r\n  console.log('CharacterDetail', props);\r\n  if (props.selectedCharacter === undefined) {\r\n    return (\r\n      <section>\r\n        <p>Personaje no encontrado</p>\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <section>\r\n          <Link to=\"/\">Volver Atrás</Link>\r\n          <img\r\n            className=\"card__img\"\r\n            src={props.selectedCharacter.photo}\r\n            alt={`Foto de ${props.selectedCharacter.name}`}\r\n            title={`Foto de ${props.selectedCharacter.name}`}\r\n          />\r\n          <ul>\r\n            <li>Nombre: {props.selectedCharacter.origin.name}</li>\r\n            <li>Status: {props.selectedCharacter.status}</li>\r\n            <li>Species: {props.selectedCharacter.species}</li>\r\n            <li>Origin: {props.selectedCharacter.origin.name}</li>\r\n            <li>Episodes: {props.selectedCharacter.episodes}</li>\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default CharacterDetail;\r\n","const FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleChangeFilter({\r\n      value: ev.target.value,\r\n      id: 'name',\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"form__input-text\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        key=\"name\"\r\n        placeholder=\"Search Character...\"\r\n        value={props.searchName}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","const FilterBySpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleChangeFilter({\r\n      value: ev.target.value,\r\n      id: 'species',\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <select\r\n        className=\"form__input-select\"\r\n        name=\"species\"\r\n        key=\"species\"\r\n        id=\"species\"\r\n        value={props.searchSpecies}\r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"all\">Species</option>\r\n        <option value=\"Alien\">Allien</option>\r\n        <option value=\"Human\">Human</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default FilterBySpecies;\r\n","const Reset = (props) => {\r\n  const handleReset = () => {\r\n    props.handleReset();\r\n  };\r\n  return (\r\n    <button className=\"resetButton\" onClick={handleReset}>\r\n      Reset\r\n    </button>\r\n  );\r\n};\r\nexport default Reset;\r\n","import FiletrByName from './FilterByName';\r\nimport FiletrBySpecies from './FilterBySpecies';\r\nimport Reset from './Reset';\r\nconst Filters = (props) => {\r\n  //console.log('filter', props);\r\n  return (\r\n    <form onSubmit={(ev) => ev.preventDefaul()}>\r\n      <FiletrByName\r\n        searchName={props.searchName}\r\n        handleChangeFilter={props.handleChangeFilter}\r\n      />\r\n      <FiletrBySpecies\r\n        searchSpecies={props.searchSpecies}\r\n        handleChangeFilter={props.handleChangeFilter}\r\n      />\r\n      <Reset handleReset={props.handleReset} />\r\n    </form>\r\n  );\r\n};\r\nexport default Filters;\r\n","function getDataFromApi() {\r\n  return fetch('https://rickandmortyapi.com/api/character')\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n      //limpio datos que me llegan Api con el map\r\n      return json.results.map((character) => {\r\n        //console.log('Fetch', character);\r\n        return {\r\n          id: character.id,\r\n          photo: character.image,\r\n          name: character.name,\r\n          status: character.status,\r\n          species: character.species,\r\n          origin: character.origin,\r\n          episode: character.episode,\r\n        };\r\n      });\r\n    });\r\n}\r\n\r\nexport default getDataFromApi;\r\n","// Fichero src/services/local-storage.js\r\n\r\n// Función que obtiene una propiedad del local storage\r\n// Si esta propiedad no existe porque es la primera vez que la usuaria entra en la página la función devuelve el valor de defaultValue\r\n// Que esta función devuelva un valor por defecto es una cómoda manera de trabajar, así esta comprobación no la tenemos que hacer App.js\r\nconst get = (key, defaultValue) => {\r\n  const localStorageData = localStorage.getItem(key);\r\n  if (localStorageData === null) {\r\n    return defaultValue;\r\n  } else {\r\n    return JSON.parse(localStorageData);\r\n  }\r\n};\r\n\r\n// Función que guarda una propiedad y su valor en el local storage\r\nconst set = (key, value) => {\r\n  const localStorageData = JSON.stringify(value);\r\n  localStorage.setItem(key, localStorageData);\r\n};\r\n\r\n// Función que borra una propiedad del local storage\r\nconst remove = (key) => {\r\n  localStorage.removeItem(key);\r\n};\r\n\r\n// Función que limpia todo el local storage\r\nconst clear = () => {\r\n  localStorage.clear();\r\n};\r\n\r\n// Creamos un objeto temporal que es el que queremos exportar\r\n// Este objeto tiene la una propiedad get cuyo valor es la función get\r\n// Este objeto tiene la una propiedad set cuyo valor es la función set\r\n// Este objeto tiene la una propiedad remove cuyo valor es la función remove\r\n// Este objeto tiene la una propiedad clear cuyo valor es la función clear\r\nconst objectToExport = {\r\n  get: get,\r\n  set: set,\r\n  remove: remove,\r\n  clear: clear,\r\n};\r\n\r\n// Exportamos el objeto para que pueda ser usado desde App\r\nexport default objectToExport;\r\n","// Fichero src/components/App.js\nimport '../styles/App.scss';\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\n\n// Componenetes //\nimport Header from './Header';\nimport Footer from './Footer';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport Filters from './Filters';\nimport Reset from './Reset';\n\n// services\nimport DataApi from '../services/DataApi';\nimport ls from '../services/local-storage';\n\nfunction App() {\n  //estados//\n  const [data, setData] = useState(ls.get('data', []));\n  const [searchName, setSearchName] = useState(ls.get('searchName', ''));\n  const [searchSpecies, setSearchSpecies] = useState(\n    ls.get('searchSpecies', 'all')\n  );\n\n  // Reset\n  const handleReset = () => {\n    localStorage.clear();\n    window.location.reload(true);\n  };\n\n  //useEffect//\n  useEffect(() => {\n    DataApi().then((initialData) => {\n      setData(initialData);\n      //console.log('InitialData', initialData);\n    });\n  }, []);\n\n  //Local Storage\n\n  useEffect(() => {\n    ls.set('data', data);\n  }, [data]);\n  useEffect(() => {\n    ls.set('searchName', searchName);\n  }, [searchName]);\n  useEffect(() => {\n    ls.set('searchSpecies', searchSpecies);\n  }, [searchSpecies]);\n\n  //Funciones manejadoras//\n\n  const handleChangeFilter = (data) => {\n    if (data.id === 'name') {\n      setSearchName(data.value);\n    } else {\n      setSearchSpecies(data.value);\n    }\n  };\n\n  //  USERouteMatch\n  const routeData = useRouteMatch('/character/:id');\n\n  // Ternario de 'seguridad' si la ruta no es la que estamos esperando devuelve null\n  // Dentro de characterId se guarda la parte variable de la ruta\n\n  const characterId = routeData !== null ? routeData.params.id : '';\n  //console.log('useRouteMatch', routeData);\n\n  // Buscamos dentro de todos los objetos cual es el que tiene ese id//\n  const selectedCharacter = data.find(\n    (character) => character.id === parseInt(characterId)\n  );\n  console.log('SelectedCharacter', selectedCharacter);\n  console.log('este es el console del id', characterId);\n\n  //Funciones para filtrar por\n  const filteredData = data\n    .filter((character) =>\n      character.name\n        .toLocaleLowerCase()\n        .includes(searchName.toLocaleLowerCase())\n    )\n\n    .filter(\n      (character) =>\n        searchSpecies === 'all' || searchSpecies === character.species\n    );\n\n  return (\n    <div>\n      <Header />\n\n      <main className=\"main\">\n        <Switch>\n          {/*pintar el detalle de un personaje */}\n          <Route exact path=\"/character/:id\">\n            <section>\n              <CharacterDetail selectedCharacter={selectedCharacter} />\n            </section>\n          </Route>\n\n          {/*listado personajes con/sin filtro*/}\n          <Route exact path=\"/\">\n            <section className=\"form\">\n              <Filters\n                searchName={searchName}\n                searchSpecies={searchSpecies}\n                handleChangeFilter={handleChangeFilter}\n              />\n            </section>\n            <section>\n              <CharacterList data={filteredData} />\n            </section>\n          </Route>\n\n          {/*ruta escrita mal */}\n          <Route>\n            <section>\n              <p>Oh!! Página no encontrada</p>\n            </section>\n          </Route>\n        </Switch>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}